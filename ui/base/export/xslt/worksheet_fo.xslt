<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:fo="http://www.w3.org/1999/XSL/Format">
	<xsl:output version="1.0" method="xml" encoding="UTF-8" indent="no"/>
	<xsl:param name="SV_OutputFormat" select="'PDF'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:variable name="fo:layout-master-set">
		<fo:layout-master-set>
			<fo:simple-page-master master-name="default-page">
				<xsl:attribute name="page-height"><xsl:value-of select="worksheet/pageproperties/page/@height"/></xsl:attribute>
				<xsl:attribute name="page-width"><xsl:value-of select="worksheet/pageproperties/page/@width"/></xsl:attribute>
				<xsl:attribute name="margin-left"><xsl:value-of select="worksheet/pageproperties/margins/@left"/></xsl:attribute>
				<xsl:attribute name="margin-right"><xsl:value-of select="worksheet/pageproperties/margins/@right"/></xsl:attribute>
				<fo:region-body>
					<xsl:variable name="vertical-center" select="worksheet/pageproperties/margins/@vertical_center"/>
					<xsl:if test="$vertical-center = 'TRUE'">
						<xsl:attribute name="display-align">center</xsl:attribute>
					</xsl:if>
					<xsl:attribute name="margin-top"><xsl:value-of select="worksheet/pageproperties/margins/@top"/></xsl:attribute>
					<xsl:attribute name="margin-bottom"><xsl:value-of select="worksheet/pageproperties/margins/@bottom"/></xsl:attribute>
				</fo:region-body>
				<fo:region-before>
					<xsl:attribute name="extent"><xsl:value-of select="worksheet/pageproperties/margins/@total_header"/></xsl:attribute>
				</fo:region-before>
				<fo:region-after>
					<xsl:attribute name="extent"><xsl:value-of select="worksheet/pageproperties/margins/@total_footer"/></xsl:attribute>
				</fo:region-after>
			</fo:simple-page-master>
		</fo:layout-master-set>
	</xsl:variable>
	<xsl:template match="/">
		<fo:root>
			<xsl:copy-of select="$fo:layout-master-set"/>
			<fo:page-sequence master-reference="default-page" format="1">
				<xsl:attribute name="initial-page-number"><xsl:value-of select="worksheet/pageproperties/page/@first_page_number"/></xsl:attribute>
				<xsl:call-template name="headerall"/>
				<xsl:call-template name="footerall"/>
				<fo:flow flow-name="xsl-region-body">
					<fo:block>
						<xsl:for-each select="$XML">
							<xsl:if test="worksheet/grid/rows/row">
								<xsl:for-each select="worksheet">
									<xsl:for-each select="grid">
										<xsl:for-each select="rows">
											<xsl:variable name="spaceHeight" select="@space_height"/>
											<xsl:variable name="spaceWidth" select="@space_width"/>
											<fo:table table-layout="fixed" width="100%">
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-column column-width="">
													<xsl:variable name="sColumnWidth" select="@rows_width"/>
													<xsl:if test="$sColumnWidth != ''">
														<xsl:attribute name="column-width"><xsl:value-of select="$sColumnWidth"/></xsl:attribute>
													</xsl:if>
													<xsl:if test="$sColumnWidth = ''">
														<xsl:attribute name="column-width">proportional-column-width(1)</xsl:attribute>
													</xsl:if>
												</fo:table-column>
												<fo:table-column column-width="proportional-column-width(1)"/>
												<fo:table-body>
													<fo:table-row>
														<fo:table-cell>
															<xsl:variable name="horizontal-center" select="$XML/worksheet/pageproperties/margins/@horizontal_center"/>
															<xsl:if test="$horizontal-center = 'TRUE'">
																<xsl:attribute name="column-number">2</xsl:attribute>
															</xsl:if>
															<xsl:if test="$horizontal-center = 'FALSE'">
																<xsl:attribute name="column-number">1</xsl:attribute>
															</xsl:if>
															<fo:block>
																<fo:table border-spacing="0pt">
																	<xsl:variable name="sGridlines" select="$XML/worksheet/pageproperties/sheet/@gridlines"/>
																	<xsl:if test="$sGridlines = 'TRUE'">
																		<xsl:attribute name="border">solid 1pt black</xsl:attribute>
																	</xsl:if>
																	<xsl:variable name="sPageBreakerTable" select="@page_breaker"/>
																	<xsl:if test="$sPageBreakerTable != ''">
																		<xsl:attribute name="break-after"><xsl:value-of select="$sPageBreakerTable"/></xsl:attribute>
																	</xsl:if>
																	<xsl:for-each select="col_widths">
																		<xsl:for-each select="col_w">
																			<fo:table-column>
																				<xsl:variable name="sColumn-width" select="@w"/>
																				<xsl:if test="$sColumn-width != ''">
																					<xsl:attribute name="column-width"><xsl:value-of select="$sColumn-width"/></xsl:attribute>
																				</xsl:if>
																			</fo:table-column>
																		</xsl:for-each>
																	</xsl:for-each>
																	<fo:table-body start-indent="0pt">
																		<xsl:for-each select="row">
																			<fo:table-row>
																				<xsl:variable name="sHeight" select="@height"/>
																				<xsl:if test="$sHeight != ''">
																					<xsl:attribute name="height"><xsl:value-of select="$sHeight"/></xsl:attribute>
																				</xsl:if>
																				<xsl:variable name="sPageBreaker" select="@page_breaker"/>
																				<xsl:if test="$sPageBreaker != ''">
																					<xsl:attribute name="break-after"><xsl:value-of select="$sPageBreaker"/></xsl:attribute>
																				</xsl:if>
																				<xsl:for-each select="cells">
																					<xsl:for-each select="cell">
																						<fo:table-cell border-spacing="0pt" keep-together="always" padding="0" display-align="auto"  padding-left="2pt" padding-right="2pt">
																							<xsl:variable name="sText-indent" select="@text-indent"/>

																							<!-- Wrap Text -->
																							<xsl:variable name="sWhite-space" select="@white-space"/>
																							<xsl:if test="$sWhite-space = 'pre-wrap'">
																								<xsl:attribute name="keep-together"><xsl:text>auto</xsl:text></xsl:attribute>
																							</xsl:if>

																							<xsl:variable name="sBackground-image" select="@background-image"/>
																							<xsl:if test="$sBackground-image != ''">
																								<xsl:attribute name="background-image"><xsl:value-of select="$sBackground-image"/></xsl:attribute>
																							</xsl:if>
																							<xsl:variable name="sBackground-color" select="@background-color"/>
																							<xsl:if test="$sBackground-color != ''">
																								<xsl:attribute name="background-color"><xsl:value-of select="$sBackground-color"/></xsl:attribute>
																							</xsl:if>
																							<xsl:variable name="sColor" select="@color"/>
																							<xsl:if test="$sColor != ''">
																								<xsl:attribute name="color"><xsl:value-of select="$sColor"/></xsl:attribute>
																							</xsl:if>
																							<xsl:variable name="sFont-family" select="@font-family"/>
																							<xsl:if test="$sFont-family != ''">
																								<xsl:attribute name="font-family"><xsl:value-of select="$sFont-family"/></xsl:attribute>
																							</xsl:if>
																							<xsl:variable name="sFont-size" select="@font-size"/>
																							<xsl:if test="$sFont-size != ''">
																								<xsl:attribute name="font-size"><xsl:value-of select="$sFont-size"/></xsl:attribute>
																							</xsl:if>
																							<xsl:variable name="sFont-style" select="@font-style"/>
																							<xsl:if test="$sFont-style != ''">
																								<xsl:attribute name="font-style"><xsl:value-of select="$sFont-style"/></xsl:attribute>
																							</xsl:if>
																							<xsl:variable name="sFont-weight" select="@font-weight"/>
																							<xsl:if test="$sFont-weight != ''">
																								<xsl:attribute name="font-weight"><xsl:value-of select="$sFont-weight"/></xsl:attribute>
																							</xsl:if>
																							<xsl:variable name="sText-decoration" select="@text-decoration"/>
																							<xsl:if test="$sText-decoration != ''">
																								<xsl:attribute name="text-decoration"><xsl:value-of select="$sText-decoration"/></xsl:attribute>
																							</xsl:if>

																							<xsl:variable name="sRowspan" select="@rowspan"/>
																							<xsl:if test="$sRowspan != ''">
																								<xsl:attribute name="number-rows-spanned"><xsl:value-of select="$sRowspan"/></xsl:attribute>
																							</xsl:if>
																							<xsl:variable name="sColspan" select="@colspan"/>
																							<xsl:if test="$sColspan != ''">
																								<xsl:attribute name="number-columns-spanned"><xsl:value-of select="$sColspan"/></xsl:attribute>
																							</xsl:if>

																							<!-- GRIDLINE -->
																							<xsl:if test="@border-left != ''">
																								<xsl:attribute name="border-left"><xsl:value-of select="@border-left"/></xsl:attribute>
																							</xsl:if>
																							<xsl:if test="@border-top != ''">
																								<xsl:attribute name="border-top"><xsl:value-of select="@border-top"/></xsl:attribute>
																							</xsl:if>

																							<!-- CELL VALUE -->
																							<fo:block-container overflow="hidden" display-align="before">
																								<xsl:variable name="sText-align" select="@text-align"/>
																								<xsl:if test="$sText-align != ''">
																									<xsl:attribute name="text-align"><xsl:value-of select="$sText-align"/></xsl:attribute>
																								</xsl:if>

																								<xsl:variable name="sHeightBlockC" select="../../@height"/>
																								<xsl:variable name="sMergedW" select="@m_width"/>
																								<xsl:variable name="sMergedH" select="@m_height"/>
																								<xsl:choose>
																									<xsl:when test="($sMergedW != '') and ($sMergedH != '')">
																										<xsl:attribute name="height"><xsl:value-of select="$sMergedH"/><xsl:text>pt</xsl:text></xsl:attribute>
																										<xsl:attribute name="width"><xsl:value-of select="$sMergedW"/><xsl:text>pt</xsl:text></xsl:attribute>
																									</xsl:when>
																									<xsl:when test="$sHeightBlockC != ''">
																										<xsl:attribute name="height"><xsl:value-of select="$sHeightBlockC"/></xsl:attribute>
																									</xsl:when>
																								</xsl:choose>

																								<fo:block padding-top="2pt">
																									<xsl:if test="$sText-indent != ''">
																										<xsl:attribute name="text-indent"><xsl:value-of select="$sText-indent"/></xsl:attribute>
																									</xsl:if>
																									<xsl:for-each select="value">
																										<xsl:variable name="value-of-template">
																											<xsl:apply-templates/>
																										</xsl:variable>
																										<xsl:choose>
																											<xsl:when test="img">
																												<xsl:for-each select="img">
																													<fo:block-container absolute-position="absolute">
																														<fo:block>
																															<fo:external-graphic content-height="scale-to-fit" scaling="uniform" src="{@src}">
																																<xsl:if test="@width != ''">
																																	<xsl:attribute name="width"><xsl:value-of select="@width"/><xsl:text>pt</xsl:text></xsl:attribute>
																																</xsl:if>
																																<xsl:if test="@height != ''">
																																	<xsl:attribute name="height"><xsl:value-of select="@height"/><xsl:text>pt</xsl:text></xsl:attribute>
																																</xsl:if>
																																<xsl:if test="@content-height != ''">
																																	<xsl:attribute name="content-height"><xsl:value-of select="@content-height"/></xsl:attribute>
																																</xsl:if>
																															</fo:external-graphic>
																														</fo:block>
																													</fo:block-container>
																												</xsl:for-each>
																											</xsl:when>
																											<xsl:when test="contains(string($value-of-template),'&#x2029;') or contains(string($value-of-template),'&#xA;')">
																												<fo:block linefeed-treatment="preserve" keep-together="auto">
																													<xsl:copy-of select="$value-of-template"/>
																												</fo:block>
																											</xsl:when>
																											<xsl:otherwise>
																												<fo:inline>
																													<xsl:copy-of select="$value-of-template"/>
																												</fo:inline>
																											</xsl:otherwise>
																										</xsl:choose>
																									</xsl:for-each>
																								</fo:block>
																							</fo:block-container>

																							<!-- CELL BORDER (NOT GRIDLINES) -->
																							<xsl:if test="border_box">
																								<xsl:for-each select="border_box">
																									<fo:block-container absolute-position="absolute" z-index="4000" top="0pt" left="0pt">
																										<xsl:if test="@border-left != ''">
																											<xsl:attribute name="border-left"><xsl:value-of select="@border-left"/></xsl:attribute>
																										</xsl:if>
																										<xsl:if test="@border-top != ''">
																											<xsl:attribute name="border-top"><xsl:value-of select="@border-top"/></xsl:attribute>
																										</xsl:if>
																										<xsl:attribute name="width"><xsl:value-of select="@w"/><xsl:text>pt</xsl:text></xsl:attribute>
																										<xsl:attribute name="height"><xsl:value-of select="@h"/><xsl:text>pt</xsl:text></xsl:attribute>
																										<xsl:attribute name="top"><xsl:value-of select="@pos_y"/><xsl:text>pt</xsl:text></xsl:attribute>
																										<xsl:attribute name="left"><xsl:value-of select="@pos_x"/><xsl:text>pt</xsl:text></xsl:attribute>
																										<fo:block></fo:block>
																									</fo:block-container>
																								</xsl:for-each>
																							</xsl:if>

																							<!-- FLOATING WORKSHEET ELEMENTS (CHARTS, IMAGES) -->
 																							<xsl:if test="wsel">
																								<xsl:for-each select="wsel">
																									<fo:block-container absolute-position="absolute" z-index="5000" border="solid black 0pt" overflow="hidden" top="0pt" left="0pt">
																										<xsl:variable name="sLeft" select="@pos_x"/>
																										<xsl:if test="$sLeft != ''">
																											<xsl:attribute name="left"><xsl:value-of select="$sLeft"/><xsl:text>pt</xsl:text></xsl:attribute>
																										</xsl:if>

																										<xsl:variable name="sTop" select="@pos_y"/>
																										<xsl:if test="$sTop != ''">
																											<xsl:attribute name="top"><xsl:value-of select="$sTop"/><xsl:text>pt</xsl:text></xsl:attribute>
																										</xsl:if>
																										<xsl:variable name="sPartWidth" select="@part_width"/>
																										<xsl:if test="$sPartWidth != ''">
																											<xsl:attribute name="width"><xsl:value-of select="$sPartWidth"/><xsl:text>pt</xsl:text></xsl:attribute>
																										</xsl:if>
																										<xsl:variable name="sPartHeight" select="@part_height"/>
																										<xsl:if test="$sPartHeight != ''">
																											<xsl:attribute name="height"><xsl:value-of select="$sPartHeight"/><xsl:text>pt</xsl:text></xsl:attribute>
																										</xsl:if>
																										<fo:block>
																											<fo:block-container absolute-position="absolute" z-index="4999" top="-1pt" left="0pt">
																												<xsl:variable name="sInnerLeft" select="@inner_left"/>
																												<xsl:if test="$sInnerLeft != ''">
																													<xsl:attribute name="left"><xsl:value-of select="$sInnerLeft"/><xsl:text>pt</xsl:text></xsl:attribute>
																												</xsl:if>
																												<xsl:variable name="sInnerTop" select="@inner_top"/>
																												<xsl:if test="$sInnerTop != ''">
																													<xsl:attribute name="top"><xsl:value-of select="$sInnerTop"/><xsl:text>pt</xsl:text></xsl:attribute>
																												</xsl:if>
																												<fo:block>
																													<fo:external-graphic content-height="scale-to-fit" content-width="scale-to-fit" scaling="non-uniform">
																														<xsl:variable name="sChartWidth" select="@width"/>
																														<xsl:if test="$sChartWidth != ''">
																															<xsl:attribute name="width"><xsl:value-of select="$sChartWidth"/><xsl:text>pt</xsl:text></xsl:attribute>
																														</xsl:if>
																														<xsl:variable name="sChartHeight" select="@height"/>
																														<xsl:if test="$sChartHeight != ''">
																															<xsl:attribute name="height"><xsl:value-of select="$sChartHeight"/><xsl:text>pt</xsl:text></xsl:attribute>
																														</xsl:if>
																														<xsl:attribute name="src"><xsl:text>url(</xsl:text><xsl:call-template name="double-backslash"><xsl:with-param name="text"><xsl:value-of select="string(@src)"/></xsl:with-param><xsl:with-param name="text-length"><xsl:value-of select="string-length(string(@src))"/></xsl:with-param></xsl:call-template><xsl:text>)</xsl:text></xsl:attribute>
																													</fo:external-graphic>
																												</fo:block>
																											</fo:block-container>
																										</fo:block>
																									</fo:block-container>
																								</xsl:for-each>
																							</xsl:if>

																						</fo:table-cell>
																					</xsl:for-each>
																				</xsl:for-each>
																			</fo:table-row>
																		</xsl:for-each>
																	</fo:table-body>
																</fo:table>
															</fo:block>
														</fo:table-cell>
													</fo:table-row>
												</fo:table-body>
											</fo:table>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:if>
						</xsl:for-each>
					</fo:block>
					<fo:block id="SV_RefID_PageTotal"/>
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>
	<xsl:template name="headerall">
		<fo:static-content flow-name="xsl-region-before">
			<fo:block>
				<xsl:if test="$XML/worksheet/sheetproperties/header/@show = &apos;TRUE&apos;">
					<fo:inline-container>
						<fo:block>
							<xsl:text>&#x2029;</xsl:text>
						</fo:block>
					</fo:inline-container>
					<fo:table font-size="10pt" table-layout="fixed" width="100%" border-spacing="2pt">
						<fo:table-column column-width="proportional-column-width(1)"/>
						<fo:table-column column-width="proportional-column-width(1)"/>
						<fo:table-column column-width="proportional-column-width(1)"/>
						<fo:table-body start-indent="0pt">
							<fo:table-row>
								<fo:table-cell padding="0" number-columns-spanned="3" display-align="center">
									<xsl:attribute name="height"><xsl:value-of select="worksheet/pageproperties/margins/@header"/></xsl:attribute>
									<fo:block/>
								</fo:table-cell>
							</fo:table-row>
							<fo:table-row>
								<fo:table-cell padding="0" number-columns-spanned="3" text-align="left" display-align="before">
									<fo:block>
										<fo:table font-size="10pt" table-layout="fixed" width="100%" border-spacing="2pt">
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-column column-width="proportional-column-width(1)"/>
											<fo:table-body start-indent="0pt">
												<fo:table-row>
													<xsl:attribute name="height"><xsl:value-of select="worksheet/pageproperties/margins/@wb_header_height"/></xsl:attribute>
													<fo:table-cell padding="0" text-align="left" display-align="before">
														<fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="worksheet">
																	<xsl:for-each select="sheetproperties">
																		<xsl:for-each select="wb_header">
																			<xsl:apply-templates select="left_field"/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
													<fo:table-cell padding="0" text-align="right" display-align="before">
														<fo:block>
															<xsl:for-each select="$XML">
																<xsl:for-each select="worksheet">
																	<xsl:for-each select="sheetproperties">
																		<xsl:for-each select="wb_header">
																			<xsl:apply-templates select="right_field"/>
																		</xsl:for-each>
																	</xsl:for-each>
																</xsl:for-each>
															</xsl:for-each>
														</fo:block>
													</fo:table-cell>
												</fo:table-row>
											</fo:table-body>
										</fo:table>
									</fo:block>
								</fo:table-cell>
							</fo:table-row>
							<fo:table-row>
								<xsl:attribute name="height"><xsl:value-of select="worksheet/pageproperties/margins/@header_height"/></xsl:attribute>
								<fo:table-cell padding="0" text-align="left" display-align="before">
									<fo:block>
										<xsl:for-each select="$XML">
											<xsl:for-each select="worksheet">
												<xsl:for-each select="sheetproperties">
													<xsl:for-each select="header">
														<xsl:apply-templates select="left_field"/>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:table-cell>
								<fo:table-cell padding="0" text-align="center" display-align="before">
									<fo:block>
										<xsl:for-each select="$XML">
											<xsl:for-each select="worksheet">
												<xsl:for-each select="sheetproperties">
													<xsl:for-each select="header">
														<xsl:apply-templates select="center_field"/>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:table-cell>
								<fo:table-cell padding="0" text-align="right" display-align="before">
									<fo:block>
										<xsl:for-each select="$XML">
											<xsl:for-each select="worksheet">
												<xsl:for-each select="sheetproperties">
													<xsl:for-each select="header">
														<xsl:apply-templates select="right_field"/>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:table-cell>
							</fo:table-row>
						</fo:table-body>
					</fo:table>
				</xsl:if>
			</fo:block>
		</fo:static-content>
	</xsl:template>
	<xsl:template name="footerall">
		<fo:static-content flow-name="xsl-region-after">
			<fo:block>
				<xsl:if test="$XML/worksheet/sheetproperties/footer/@show =  &apos;TRUE&apos;">
					<fo:inline-container>
						<fo:block>
							<xsl:text>&#x2029;</xsl:text>
						</fo:block>
					</fo:inline-container>
					<fo:table font-size="10pt" table-layout="fixed" width="100%" border-spacing="2pt">
						<fo:table-column column-width="proportional-column-width(1)"/>
						<fo:table-column column-width="proportional-column-width(1)"/>
						<fo:table-column column-width="proportional-column-width(1)"/>
						<fo:table-body start-indent="0pt">
							<fo:table-row>
								<xsl:attribute name="height"><xsl:value-of select="worksheet/pageproperties/margins/@footer_height"/></xsl:attribute>
								<fo:table-cell padding="0" text-align="left" display-align="after">
									<fo:block>
										<xsl:for-each select="$XML">
											<xsl:for-each select="worksheet">
												<xsl:for-each select="sheetproperties">
													<xsl:for-each select="footer">
														<xsl:apply-templates select="left_field"/>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:table-cell>
								<fo:table-cell padding="0" text-align="center" display-align="after">
									<fo:block>
										<xsl:for-each select="$XML">
											<xsl:for-each select="worksheet">
												<xsl:for-each select="sheetproperties">
													<xsl:for-each select="footer">
														<xsl:apply-templates select="center_field"/>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:table-cell>
								<fo:table-cell padding="0" text-align="right" display-align="after">
									<fo:block>
										<xsl:for-each select="$XML">
											<xsl:for-each select="worksheet">
												<xsl:for-each select="sheetproperties">
													<xsl:for-each select="footer">
														<xsl:apply-templates select="right_field"/>
													</xsl:for-each>
												</xsl:for-each>
											</xsl:for-each>
										</xsl:for-each>
									</fo:block>
								</fo:table-cell>
							</fo:table-row>
							<fo:table-row>
								<fo:table-cell padding="0" number-columns-spanned="3" display-align="center">
									<xsl:attribute name="height"><xsl:value-of select="worksheet/pageproperties/margins/@footer"/></xsl:attribute>
									<fo:block/>
								</fo:table-cell>
							</fo:table-row>
						</fo:table-body>
					</fo:table>
				</xsl:if>
			</fo:block>
		</fo:static-content>
	</xsl:template>
	<!-- Header/Footer Cell -->
	<xsl:template match="left_field|center_field|right_field">
		<xsl:variable name="value-of-template">
			<xsl:apply-templates/>
		</xsl:variable>
		<xsl:choose>
			<xsl:when test="contains(string($value-of-template),'&#x2029;') or contains(string($value-of-template),'&#xA;')">
				<fo:block linefeed-treatment="preserve">
					<xsl:variable name="sBackground-color" select="@background-color"/>
					<xsl:if test="$sBackground-color != ''">
						<xsl:attribute name="background-color"><xsl:value-of select="$sBackground-color"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sColor" select="@color"/>
					<xsl:if test="$sColor != ''">
						<xsl:attribute name="color"><xsl:value-of select="$sColor"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sFont-family" select="@font-family"/>
					<xsl:if test="$sFont-family != ''">
						<xsl:attribute name="font-family"><xsl:value-of select="$sFont-family"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sFont-size" select="@font-size"/>
					<xsl:if test="$sFont-size != ''">
						<xsl:attribute name="font-size"><xsl:value-of select="$sFont-size"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sFont-style" select="@font-style"/>
					<xsl:if test="$sFont-style != ''">
						<xsl:attribute name="font-style"><xsl:value-of select="$sFont-style"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sFont-weight" select="@font-weight"/>
					<xsl:if test="$sFont-weight != ''">
						<xsl:attribute name="font-weight"><xsl:value-of select="$sFont-weight"/></xsl:attribute>
					</xsl:if>
					<xsl:call-template name="hfCellValue">
						<xsl:with-param name="inputString" select="$value-of-template"/>
					</xsl:call-template>
				</fo:block>
			</xsl:when>
			<xsl:otherwise>
				<fo:inline>
					<xsl:variable name="sBackground-color" select="@background-color"/>
					<xsl:if test="$sBackground-color != ''">
						<xsl:attribute name="background-color"><xsl:value-of select="$sBackground-color"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sColor" select="@color"/>
					<xsl:if test="$sColor != ''">
						<xsl:attribute name="color"><xsl:value-of select="$sColor"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sFont-family" select="@font-family"/>
					<xsl:if test="$sFont-family != ''">
						<xsl:attribute name="font-family"><xsl:value-of select="$sFont-family"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sFont-size" select="@font-size"/>
					<xsl:if test="$sFont-size != ''">
						<xsl:attribute name="font-size"><xsl:value-of select="$sFont-size"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sFont-style" select="@font-style"/>
					<xsl:if test="$sFont-style != ''">
						<xsl:attribute name="font-style"><xsl:value-of select="$sFont-style"/></xsl:attribute>
					</xsl:if>
					<xsl:variable name="sFont-weight" select="@font-weight"/>
					<xsl:if test="$sFont-weight != ''">
						<xsl:attribute name="font-weight"><xsl:value-of select="$sFont-weight"/></xsl:attribute>
					</xsl:if>
					<xsl:call-template name="hfCellValue">
						<xsl:with-param name="inputString" select="$value-of-template"/>
					</xsl:call-template>
				</fo:inline>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<!-- String replace -->
	<xsl:template name="hfCellValue">
		<xsl:param name="inputString"/>
		<xsl:choose>
			<xsl:when test="contains($inputString,'#@|Page|@#')">
				<xsl:value-of select="substring-before($inputString,'#@|Page|@#')"/>
				<fo:page-number/>
				<xsl:call-template name="hfCellValue">
					<xsl:with-param name="inputString" select="substring-after($inputString,'#@|Page|@#')"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:when test="contains($inputString,'#@|Pages|@#')">
				<xsl:value-of select="substring-before($inputString,'#@|Pages|@#')"/>
				<fo:page-number-citation ref-id="SV_RefID_PageTotal"/>
				<xsl:call-template name="hfCellValue">
					<xsl:with-param name="inputString" select="substring-after($inputString,'#@|Pages|@#')"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:copy-of select="$inputString"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<!-- Other templates -->
	<xsl:template name="double-backslash">
		<xsl:param name="text"/>
		<xsl:param name="text-length"/>
		<xsl:variable name="text-after-bs" select="substring-after($text, '\')"/>
		<xsl:variable name="text-after-bs-length" select="string-length($text-after-bs)"/>
		<xsl:choose>
			<xsl:when test="$text-after-bs-length = 0">
				<xsl:choose>
					<xsl:when test="substring($text, $text-length) = '\'">
						<xsl:value-of select="concat(substring($text,1,$text-length - 1), '\\')"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$text"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(substring($text,1,$text-length - $text-after-bs-length - 1), '\\')"/>
				<xsl:call-template name="double-backslash">
					<xsl:with-param name="text" select="$text-after-bs"/>
					<xsl:with-param name="text-length" select="$text-after-bs-length"/>
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
