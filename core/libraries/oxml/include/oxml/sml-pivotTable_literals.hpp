/**
 *  \file
 *  Copyright (C) 2006-2009 Jedox AG
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License (Version 2) as published
 *  by the Free Software Foundation at http://www.gnu.org/copyleft/gpl.html.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place, Suite 330, Boston, MA 02111-1307 USA
 *
 *  You may obtain a copy of the License at
 *
 *  <a href="http://www.jedox.com/license_palo_bi_suite.txt">
 *    http://www.jedox.com/license_palo_bi_suite.txt
 *  </a>
 *
 *  If you are developing and distributing open source applications under the
 *  GPL License, then you are free to use Worksheetserver under the GPL License.
 *  For OEMs, ISVs, and VARs who distribute Worksheetserver with their products,
 *  and do not license and distribute their source code under the GPL, Jedox provides
 *  a flexible OEM Commercial License.
 */


// This file has been auto-generated. Don't change it by hand!

#ifndef SML_PIVOTTABLE_LITERALS_HPP
#define SML_PIVOTTABLE_LITERALS_HPP

#include <xio/xercesc/types.hpp>

namespace spreadsheetml
{
	namespace xio
	{
		static const XMLCh sml_pivotTable_action_literal[] = { 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_allCaption_literal[] = { 0x61, 0x6c, 0x6c, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_allDrilled_literal[] = { 0x61, 0x6c, 0x6c, 0x44, 0x72, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_allUniqueName_literal[] = { 0x61, 0x6c, 0x6c, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_applyAlignmentFormats_literal[] = { 0x61, 0x70, 0x70, 0x6c, 0x79, 0x41, 0x6c, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_applyBorderFormats_literal[] = { 0x61, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_applyFontFormats_literal[] = { 0x61, 0x70, 0x70, 0x6c, 0x79, 0x46, 0x6f, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_applyNumberFormats_literal[] = { 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_applyPatternFormats_literal[] = { 0x61, 0x70, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_applyWidthHeightFormats_literal[] = { 0x61, 0x70, 0x70, 0x6c, 0x79, 0x57, 0x69, 0x64, 0x74, 0x68, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_asteriskTotals_literal[] = { 0x61, 0x73, 0x74, 0x65, 0x72, 0x69, 0x73, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_attribute_literal[] = { 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_autoEnd_literal[] = { 0x61, 0x75, 0x74, 0x6f, 0x45, 0x6e, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_autoFilter_literal[] = { 0x61, 0x75, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_autoFormatId_literal[] = { 0x61, 0x75, 0x74, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_autoPage_literal[] = { 0x61, 0x75, 0x74, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_autoShow_literal[] = { 0x61, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x00 };
		static const XMLCh sml_pivotTable_autoSortScope_literal[] = { 0x61, 0x75, 0x74, 0x6f, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_autoStart_literal[] = { 0x61, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_avgSubtotal_literal[] = { 0x61, 0x76, 0x67, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_axis_literal[] = { 0x61, 0x78, 0x69, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_b_literal[] = { 0x62, 0x00 };
		static const XMLCh sml_pivotTable_backgroundQuery_literal[] = { 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x51, 0x75, 0x65, 0x72, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_base_literal[] = { 0x62, 0x61, 0x73, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_baseField_literal[] = { 0x62, 0x61, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_baseItem_literal[] = { 0x62, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x00 };
		static const XMLCh sml_pivotTable_bc_literal[] = { 0x62, 0x63, 0x00 };
		static const XMLCh sml_pivotTable_c_literal[] = { 0x63, 0x00 };
		static const XMLCh sml_pivotTable_cacheField_literal[] = { 0x63, 0x61, 0x63, 0x68, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_cacheFields_literal[] = { 0x63, 0x61, 0x63, 0x68, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_cacheHierarchies_literal[] = { 0x63, 0x61, 0x63, 0x68, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_cacheHierarchy_literal[] = { 0x63, 0x61, 0x63, 0x68, 0x65, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_cacheId_literal[] = { 0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_cacheSource_literal[] = { 0x63, 0x61, 0x63, 0x68, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_calculatedItem_literal[] = { 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x00 };
		static const XMLCh sml_pivotTable_calculatedItems_literal[] = { 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_calculatedMember_literal[] = { 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_calculatedMembers_literal[] = { 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_cap_literal[] = { 0x63, 0x61, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_caption_literal[] = { 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_chart_literal[] = { 0x63, 0x68, 0x61, 0x72, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_chartFormat_literal[] = { 0x63, 0x68, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_chartFormats_literal[] = { 0x63, 0x68, 0x61, 0x72, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_colFields_literal[] = { 0x63, 0x6f, 0x6c, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_colGrandTotals_literal[] = { 0x63, 0x6f, 0x6c, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_colHeaderCaption_literal[] = { 0x63, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_colHierarchiesUsage_literal[] = { 0x63, 0x6f, 0x6c, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x65, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_colHierarchyUsage_literal[] = { 0x63, 0x6f, 0x6c, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_colItems_literal[] = { 0x63, 0x6f, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_colPageCount_literal[] = { 0x63, 0x6f, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_compact_literal[] = { 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_compactData_literal[] = { 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x00 };
		static const XMLCh sml_pivotTable_conditionalFormat_literal[] = { 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_conditionalFormats_literal[] = { 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_connectionId_literal[] = { 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_consolidation_literal[] = { 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_containsBlank_literal[] = { 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x00 };
		static const XMLCh sml_pivotTable_containsDate_literal[] = { 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_containsInteger_literal[] = { 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_containsMixedTypes_literal[] = { 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_containsNonDate_literal[] = { 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x4e, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_containsNumber_literal[] = { 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_containsSemiMixedTypes_literal[] = { 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x53, 0x65, 0x6d, 0x69, 0x4d, 0x69, 0x78, 0x65, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_containsString_literal[] = { 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x00 };
		static const XMLCh sml_pivotTable_count_literal[] = { 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_countASubtotal_literal[] = { 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_countSubtotal_literal[] = { 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_cp_literal[] = { 0x63, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_createdVersion_literal[] = { 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_culture_literal[] = { 0x63, 0x75, 0x6c, 0x74, 0x75, 0x72, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_customListSort_literal[] = { 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_customRollUp_literal[] = { 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x6f, 0x6c, 0x6c, 0x55, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_d_literal[] = { 0x64, 0x00 };
		static const XMLCh sml_pivotTable_databaseField_literal[] = { 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_dataCaption_literal[] = { 0x64, 0x61, 0x74, 0x61, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_dataField_literal[] = { 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_dataFields_literal[] = { 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_dataOnRows_literal[] = { 0x64, 0x61, 0x74, 0x61, 0x4f, 0x6e, 0x52, 0x6f, 0x77, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_dataPosition_literal[] = { 0x64, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_dataSourceSort_literal[] = { 0x64, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_defaultAttributeDrillState_literal[] = { 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44, 0x72, 0x69, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_defaultMemberUniqueName_literal[] = { 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_defaultSubtotal_literal[] = { 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_description_literal[] = { 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_dimension_literal[] = { 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_dimensions_literal[] = { 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_dimensionUniqueName_literal[] = { 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_disableFieldList_literal[] = { 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_discretePr_literal[] = { 0x64, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x50, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_displayFolder_literal[] = { 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_dragOff_literal[] = { 0x64, 0x72, 0x61, 0x67, 0x4f, 0x66, 0x66, 0x00 };
		static const XMLCh sml_pivotTable_dragToCol_literal[] = { 0x64, 0x72, 0x61, 0x67, 0x54, 0x6f, 0x43, 0x6f, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_dragToData_literal[] = { 0x64, 0x72, 0x61, 0x67, 0x54, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x00 };
		static const XMLCh sml_pivotTable_dragToPage_literal[] = { 0x64, 0x72, 0x61, 0x67, 0x54, 0x6f, 0x50, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_dragToRow_literal[] = { 0x64, 0x72, 0x61, 0x67, 0x54, 0x6f, 0x52, 0x6f, 0x77, 0x00 };
		static const XMLCh sml_pivotTable_dxfId_literal[] = { 0x64, 0x78, 0x66, 0x49, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_e_literal[] = { 0x65, 0x00 };
		static const XMLCh sml_pivotTable_editData_literal[] = { 0x65, 0x64, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x00 };
		static const XMLCh sml_pivotTable_enableDrill_literal[] = { 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x72, 0x69, 0x6c, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_enableFieldProperties_literal[] = { 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_enableRefresh_literal[] = { 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x00 };
		static const XMLCh sml_pivotTable_enableWizard_literal[] = { 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x69, 0x7a, 0x61, 0x72, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_endDate_literal[] = { 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_endNum_literal[] = { 0x65, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x00 };
		static const XMLCh sml_pivotTable_entries_literal[] = { 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_errorCaption_literal[] = { 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_evalOrder_literal[] = { 0x65, 0x76, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_extLst_literal[] = { 0x65, 0x78, 0x74, 0x4c, 0x73, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_f_literal[] = { 0x66, 0x00 };
		static const XMLCh sml_pivotTable_fc_literal[] = { 0x66, 0x63, 0x00 };
		static const XMLCh sml_pivotTable_field_literal[] = { 0x66, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_fieldGroup_literal[] = { 0x66, 0x69, 0x65, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_fieldListSortAscending_literal[] = { 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x41, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x00 };
		static const XMLCh sml_pivotTable_fieldPrintTitles_literal[] = { 0x66, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_fieldsUsage_literal[] = { 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_fieldUsage_literal[] = { 0x66, 0x69, 0x65, 0x6c, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_filter_literal[] = { 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_filters_literal[] = { 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_firstDataCol_literal[] = { 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_firstDataRow_literal[] = { 0x66, 0x69, 0x72, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x6f, 0x77, 0x00 };
		static const XMLCh sml_pivotTable_firstHeaderRow_literal[] = { 0x66, 0x69, 0x72, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x00 };
		static const XMLCh sml_pivotTable_fld_literal[] = { 0x66, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_format_literal[] = { 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_formats_literal[] = { 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_formula_literal[] = { 0x66, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x00 };
		static const XMLCh sml_pivotTable_goal_literal[] = { 0x67, 0x6f, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_grandTotalCaption_literal[] = { 0x67, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_gridDropZones_literal[] = { 0x67, 0x72, 0x69, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_group_literal[] = { 0x67, 0x72, 0x6f, 0x75, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_groupBy_literal[] = { 0x67, 0x72, 0x6f, 0x75, 0x70, 0x42, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_groupInterval_literal[] = { 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_groupItems_literal[] = { 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_groupLevel_literal[] = { 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_groupLevels_literal[] = { 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_groupMember_literal[] = { 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_groupMembers_literal[] = { 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_groups_literal[] = { 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_h_literal[] = { 0x68, 0x00 };
		static const XMLCh sml_pivotTable_hidden_literal[] = { 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_hiddenLevel_literal[] = { 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_hideNewItems_literal[] = { 0x68, 0x69, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_hier_literal[] = { 0x68, 0x69, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_hierarchy_literal[] = { 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_hierarchyUsage_literal[] = { 0x68, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_http_colon__slash__slash_schemas_dot_openxmlformats_dot_org_slash_officeDocument_slash_2006_slash_relationships_literal[] = { 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x78, 0x6d, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x32, 0x30, 0x30, 0x36, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_http_colon__slash__slash_schemas_dot_openxmlformats_dot_org_slash_spreadsheetml_slash_2006_slash_main_literal[] = { 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x78, 0x6d, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65, 0x65, 0x74, 0x6d, 0x6c, 0x2f, 0x32, 0x30, 0x30, 0x36, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_http_colon__slash__slash_www_dot_w3_dot_org_slash_2001_slash_XMLSchema_literal[] = { 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x77, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x32, 0x30, 0x30, 0x31, 0x2f, 0x58, 0x4d, 0x4c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x00 };
		static const XMLCh sml_pivotTable_i_literal[] = { 0x69, 0x00 };
		static const XMLCh sml_pivotTable_i1_literal[] = { 0x69, 0x31, 0x00 };
		static const XMLCh sml_pivotTable_i2_literal[] = { 0x69, 0x32, 0x00 };
		static const XMLCh sml_pivotTable_i3_literal[] = { 0x69, 0x33, 0x00 };
		static const XMLCh sml_pivotTable_i4_literal[] = { 0x69, 0x34, 0x00 };
		static const XMLCh sml_pivotTable_iconSet_literal[] = { 0x69, 0x63, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_id_literal[] = { 0x69, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_iMeasureFld_literal[] = { 0x69, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_iMeasureHier_literal[] = { 0x69, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x48, 0x69, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_immersive_literal[] = { 0x69, 0x6d, 0x6d, 0x65, 0x72, 0x73, 0x69, 0x76, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_in_literal[] = { 0x69, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_includeNewItemsInFilter_literal[] = { 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_indent_literal[] = { 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_insertBlankRow_literal[] = { 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x42, 0x6c, 0x61, 0x6e, 0x6b, 0x52, 0x6f, 0x77, 0x00 };
		static const XMLCh sml_pivotTable_insertPageBreak_literal[] = { 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x50, 0x61, 0x67, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x00 };
		static const XMLCh sml_pivotTable_invalid_literal[] = { 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_item_literal[] = { 0x69, 0x74, 0x65, 0x6d, 0x00 };
		static const XMLCh sml_pivotTable_itemPageCount_literal[] = { 0x69, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_itemPrintTitles_literal[] = { 0x69, 0x74, 0x65, 0x6d, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_items_literal[] = { 0x69, 0x74, 0x65, 0x6d, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_keyAttribute_literal[] = { 0x6b, 0x65, 0x79, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_kpi_literal[] = { 0x6b, 0x70, 0x69, 0x00 };
		static const XMLCh sml_pivotTable_kpis_literal[] = { 0x6b, 0x70, 0x69, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_level_literal[] = { 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_location_literal[] = { 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_longText_literal[] = { 0x6c, 0x6f, 0x6e, 0x67, 0x54, 0x65, 0x78, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_m_literal[] = { 0x6d, 0x00 };
		static const XMLCh sml_pivotTable_map_literal[] = { 0x6d, 0x61, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_mappingCount_literal[] = { 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_maps_literal[] = { 0x6d, 0x61, 0x70, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_maxDate_literal[] = { 0x6d, 0x61, 0x78, 0x44, 0x61, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_maxRank_literal[] = { 0x6d, 0x61, 0x78, 0x52, 0x61, 0x6e, 0x6b, 0x00 };
		static const XMLCh sml_pivotTable_maxSubtotal_literal[] = { 0x6d, 0x61, 0x78, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_maxValue_literal[] = { 0x6d, 0x61, 0x78, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_mdx_literal[] = { 0x6d, 0x64, 0x78, 0x00 };
		static const XMLCh sml_pivotTable_mdxSubqueries_literal[] = { 0x6d, 0x64, 0x78, 0x53, 0x75, 0x62, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_measure_literal[] = { 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_measureFilter_literal[] = { 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_measureGroup_literal[] = { 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_measureGroups_literal[] = { 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_measures_literal[] = { 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_member_literal[] = { 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_memberName_literal[] = { 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_memberPropertyField_literal[] = { 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_members_literal[] = { 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_memberValueDatatype_literal[] = { 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_mergeItem_literal[] = { 0x6d, 0x65, 0x72, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x00 };
		static const XMLCh sml_pivotTable_minDate_literal[] = { 0x6d, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_minRefreshableVersion_literal[] = { 0x6d, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_minSubtotal_literal[] = { 0x6d, 0x69, 0x6e, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_minValue_literal[] = { 0x6d, 0x69, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_missingCaption_literal[] = { 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_missingItemsLimit_literal[] = { 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_mp_literal[] = { 0x6d, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_mpFld_literal[] = { 0x6d, 0x70, 0x46, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_mpMap_literal[] = { 0x6d, 0x70, 0x4d, 0x61, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_mps_literal[] = { 0x6d, 0x70, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_multipleFieldFilters_literal[] = { 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_multipleItemSelectionAllowed_literal[] = { 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_n_literal[] = { 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_name_literal[] = { 0x6e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_nameLen_literal[] = { 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x65, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_nonAutoSortDefault_literal[] = { 0x6e, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_numFmtId_literal[] = { 0x6e, 0x75, 0x6d, 0x46, 0x6d, 0x74, 0x49, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_oneField_literal[] = { 0x6f, 0x6e, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_optimizeMemory_literal[] = { 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x65, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_outline_literal[] = { 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_outlineData_literal[] = { 0x6f, 0x75, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x00 };
		static const XMLCh sml_pivotTable_page_literal[] = { 0x70, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_pageField_literal[] = { 0x70, 0x61, 0x67, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_pageFields_literal[] = { 0x70, 0x61, 0x67, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_pageItem_literal[] = { 0x70, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x00 };
		static const XMLCh sml_pivotTable_pageOverThenDown_literal[] = { 0x70, 0x61, 0x67, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x54, 0x68, 0x65, 0x6e, 0x44, 0x6f, 0x77, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_pages_literal[] = { 0x70, 0x61, 0x67, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_pageStyle_literal[] = { 0x70, 0x61, 0x67, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_pageWrap_literal[] = { 0x70, 0x61, 0x67, 0x65, 0x57, 0x72, 0x61, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_par_literal[] = { 0x70, 0x61, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_parent_literal[] = { 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_parentSet_literal[] = { 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_pivotArea_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x41, 0x72, 0x65, 0x61, 0x00 };
		static const XMLCh sml_pivotTable_pivotAreas_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x41, 0x72, 0x65, 0x61, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_pivotCacheDefinition_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_pivotCacheRecords_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_pivotField_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_pivotFields_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_pivotHierarchies_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_pivotHierarchy_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_pivotTableDefinition_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_pivotTableStyle_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_pivotTableStyleInfo_literal[] = { 0x70, 0x69, 0x76, 0x6f, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x00 };
		static const XMLCh sml_pivotTable_pLen_literal[] = { 0x70, 0x4c, 0x65, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_pPos_literal[] = { 0x70, 0x50, 0x6f, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_preserveFormatting_literal[] = { 0x70, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x00 };
		static const XMLCh sml_pivotTable_printDrill_literal[] = { 0x70, 0x72, 0x69, 0x6e, 0x74, 0x44, 0x72, 0x69, 0x6c, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_priority_literal[] = { 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_productSubtotal_literal[] = { 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_propertyName_literal[] = { 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_published_literal[] = { 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_query_literal[] = { 0x71, 0x75, 0x65, 0x72, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_queryCache_literal[] = { 0x71, 0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x63, 0x68, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_queryFailed_literal[] = { 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_r_literal[] = { 0x72, 0x00 };
		static const XMLCh sml_pivotTable_rangePr_literal[] = { 0x72, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_rangeSet_literal[] = { 0x72, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_rangeSets_literal[] = { 0x72, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x65, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_rankBy_literal[] = { 0x72, 0x61, 0x6e, 0x6b, 0x42, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_recordCount_literal[] = { 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_ref_literal[] = { 0x72, 0x65, 0x66, 0x00 };
		static const XMLCh sml_pivotTable_refreshedBy_literal[] = { 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x42, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_refreshedDate_literal[] = { 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_refreshedVersion_literal[] = { 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_refreshOnLoad_literal[] = { 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_rowFields_literal[] = { 0x72, 0x6f, 0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_rowGrandTotals_literal[] = { 0x72, 0x6f, 0x77, 0x47, 0x72, 0x61, 0x6e, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_rowHeaderCaption_literal[] = { 0x72, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_rowHierarchiesUsage_literal[] = { 0x72, 0x6f, 0x77, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x69, 0x65, 0x73, 0x55, 0x73, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_rowHierarchyUsage_literal[] = { 0x72, 0x6f, 0x77, 0x48, 0x69, 0x65, 0x72, 0x61, 0x72, 0x63, 0x68, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_rowItems_literal[] = { 0x72, 0x6f, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_rowPageCount_literal[] = { 0x72, 0x6f, 0x77, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_s_literal[] = { 0x73, 0x00 };
		static const XMLCh sml_pivotTable_saveData_literal[] = { 0x73, 0x61, 0x76, 0x65, 0x44, 0x61, 0x74, 0x61, 0x00 };
		static const XMLCh sml_pivotTable_scope_literal[] = { 0x73, 0x63, 0x6f, 0x70, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_sd_literal[] = { 0x73, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_series_literal[] = { 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_serverField_literal[] = { 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_serverFormat_literal[] = { 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_serverFormats_literal[] = { 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_set_literal[] = { 0x73, 0x65, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_setDefinition_literal[] = { 0x73, 0x65, 0x74, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_sets_literal[] = { 0x73, 0x65, 0x74, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_sharedItems_literal[] = { 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_sheet_literal[] = { 0x73, 0x68, 0x65, 0x65, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_showAll_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x41, 0x6c, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_showAsCaption_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x41, 0x73, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_showCalcMbrs_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x43, 0x61, 0x6c, 0x63, 0x4d, 0x62, 0x72, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showCell_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x43, 0x65, 0x6c, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_showColHeaders_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showColStripes_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showDataAs_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x41, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showDataDropDown_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_showDataTips_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x54, 0x69, 0x70, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showDrill_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x44, 0x72, 0x69, 0x6c, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_showDropDowns_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x44, 0x72, 0x6f, 0x70, 0x44, 0x6f, 0x77, 0x6e, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showDropZones_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x44, 0x72, 0x6f, 0x70, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showEmptyCol_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x43, 0x6f, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_showEmptyRow_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x6f, 0x77, 0x00 };
		static const XMLCh sml_pivotTable_showError_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_showHeaders_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showInFieldList_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_showItems_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showLastColumn_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_showMemberPropertyTips_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x69, 0x70, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showMissing_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x00 };
		static const XMLCh sml_pivotTable_showMultipleLabel_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_showPropAsCaption_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x70, 0x41, 0x73, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_showPropCell_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x70, 0x43, 0x65, 0x6c, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_showPropTip_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x70, 0x54, 0x69, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_showRowHeaders_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x52, 0x6f, 0x77, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showRowStripes_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x52, 0x6f, 0x77, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_showTip_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x54, 0x69, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_solveOrder_literal[] = { 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_sortByTuple_literal[] = { 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x54, 0x75, 0x70, 0x6c, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_sortType_literal[] = { 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_sqlType_literal[] = { 0x73, 0x71, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_st_literal[] = { 0x73, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_startDate_literal[] = { 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_startNum_literal[] = { 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x00 };
		static const XMLCh sml_pivotTable_status_literal[] = { 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_stdDevPSubtotal_literal[] = { 0x73, 0x74, 0x64, 0x44, 0x65, 0x76, 0x50, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_stdDevSubtotal_literal[] = { 0x73, 0x74, 0x64, 0x44, 0x65, 0x76, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_stringValue1_literal[] = { 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x00 };
		static const XMLCh sml_pivotTable_stringValue2_literal[] = { 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x00 };
		static const XMLCh sml_pivotTable_subtotal_literal[] = { 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_subtotalCaption_literal[] = { 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_subtotalHiddenItems_literal[] = { 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_subtotalTop_literal[] = { 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x6f, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_sumSubtotal_literal[] = { 0x73, 0x75, 0x6d, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_supportAdvancedDrill_literal[] = { 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x44, 0x72, 0x69, 0x6c, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_supportSubquery_literal[] = { 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x75, 0x62, 0x71, 0x75, 0x65, 0x72, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_t_literal[] = { 0x74, 0x00 };
		static const XMLCh sml_pivotTable_tag_literal[] = { 0x74, 0x61, 0x67, 0x00 };
		static const XMLCh sml_pivotTable_time_literal[] = { 0x74, 0x69, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_topAutoShow_literal[] = { 0x74, 0x6f, 0x70, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x68, 0x6f, 0x77, 0x00 };
		static const XMLCh sml_pivotTable_tpl_literal[] = { 0x74, 0x70, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_tpls_literal[] = { 0x74, 0x70, 0x6c, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_trend_literal[] = { 0x74, 0x72, 0x65, 0x6e, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_tupleCache_literal[] = { 0x74, 0x75, 0x70, 0x6c, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_type_literal[] = { 0x74, 0x79, 0x70, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_u_literal[] = { 0x75, 0x00 };
		static const XMLCh sml_pivotTable_un_literal[] = { 0x75, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_unbalanced_literal[] = { 0x75, 0x6e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x00 };
		static const XMLCh sml_pivotTable_unbalancedGroup_literal[] = { 0x75, 0x6e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x00 };
		static const XMLCh sml_pivotTable_uniqueList_literal[] = { 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_uniqueMemberProperty_literal[] = { 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x00 };
		static const XMLCh sml_pivotTable_uniqueName_literal[] = { 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_uniqueParent_literal[] = { 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_updatedVersion_literal[] = { 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_pivotTable_upgradeOnRefresh_literal[] = { 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x6e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x00 };
		static const XMLCh sml_pivotTable_useAutoFormatting_literal[] = { 0x75, 0x73, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x00 };
		static const XMLCh sml_pivotTable_user_literal[] = { 0x75, 0x73, 0x65, 0x72, 0x00 };
		static const XMLCh sml_pivotTable_v_literal[] = { 0x76, 0x00 };
		static const XMLCh sml_pivotTable_vacatedStyle_literal[] = { 0x76, 0x61, 0x63, 0x61, 0x74, 0x65, 0x64, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_value_literal[] = { 0x76, 0x61, 0x6c, 0x75, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_varPSubtotal_literal[] = { 0x76, 0x61, 0x72, 0x50, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_varSubtotal_literal[] = { 0x76, 0x61, 0x72, 0x53, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x00 };
		static const XMLCh sml_pivotTable_visualTotals_literal[] = { 0x76, 0x69, 0x73, 0x75, 0x61, 0x6c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_weight_literal[] = { 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x00 };
		static const XMLCh sml_pivotTable_worksheetSource_literal[] = { 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x65, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x00 };
		static const XMLCh sml_pivotTable_x_literal[] = { 0x78, 0x00 };
		static const XMLCh sml_pivotTable_xmlns_literal[] = { 0x78, 0x6d, 0x6c, 0x6e, 0x73, 0x00 };
		static const XMLCh sml_pivotTable_xsd_literal[] = { 0x78, 0x73, 0x64, 0x00 };
	}
}
#endif

