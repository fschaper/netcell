<?xml version="1.0" encoding="UTF-8"?>
<!--Designed and generated by Altova StyleVision Enterprise Edition 2008 rel. 2 - see http://www.altova.com/stylevision for more information.-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:xdt="http://www.w3.org/2005/xpath-datatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xsl:output version="1.0" method="html" indent="no" encoding="UTF-8"/>
	<xsl:param name="SV_OutputFormat" select="'HTML'"/>
	<xsl:variable name="XML" select="/"/>
	<xsl:template match="/">
		<html>
			<head>
				<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
			</head>
			<body>
				<xsl:for-each select="$XML">
					<table width="{/worksheet/grid/@width}" style="empty-cells:show;table-layout:fixed;" cellpadding="0" cellspacing="0">
						<xsl:variable name="sGridlines" select="/worksheet/pageproperties/sheet/@gridlines"/>
						<xsl:if test="$sGridlines = 'TRUE'">
							<xsl:attribute name="style"><xsl:value-of select="'border-width:1px;border-color:#000000;border-style:solid;'"/></xsl:attribute>
						</xsl:if>
						<xsl:for-each select="/worksheet/grid/rows/col_widths/col_w">
							<col>
								<xsl:if test="@w != ''">
									<xsl:attribute name="width"><xsl:value-of select="@w"/></xsl:attribute>
								</xsl:if>
							</col>
						</xsl:for-each>
						<tbody>
							<xsl:for-each select="worksheet">
								<xsl:for-each select="grid">
									<xsl:for-each select="rows">
										<xsl:for-each select="row">
											<tr style="height:{@height};">
												<xsl:for-each select="cells">
													<xsl:for-each select="cell">
														<td>
															<xsl:if test="@colspan != ''">
																<xsl:attribute name="colspan"><xsl:value-of select="@colspan"/></xsl:attribute>
															</xsl:if>
															<xsl:if test="@rowspan != ''">
																<xsl:attribute name="rowspan"><xsl:value-of select="@rowspan"/></xsl:attribute>
															</xsl:if>

															<!-- Combine Style -->
															<xsl:variable name="varStyle">
																<xsl:value-of select="'vertical-align:top;'"/>

																<xsl:if test="@background-color != ''">
																	<xsl:text>background-color:</xsl:text><xsl:value-of select="@background-color"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@color != ''">
																	<xsl:text>color:</xsl:text><xsl:value-of select="@color"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@font-family != ''">
																	<xsl:text>font-family:</xsl:text><xsl:value-of select="@font-family"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@font-size != ''">
																	<xsl:text>font-size:</xsl:text><xsl:value-of select="@font-size"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@font-style != ''">
																	<xsl:text>font-style:</xsl:text><xsl:value-of select="@font-style"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@font-weight != ''">
																	<xsl:text>font-weight:</xsl:text><xsl:value-of select="@font-weight"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@text-align != ''">
																	<xsl:text>text-align:</xsl:text><xsl:value-of select="@text-align"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@text-decoration != ''">
																	<xsl:text>text-decoration:</xsl:text><xsl:value-of select="@text-decoration"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@text-indent != ''">
																	<xsl:text>text-indent:</xsl:text><xsl:value-of select="@text-indent"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@border-bottom != ''">
																	<xsl:text>border-bottom:</xsl:text><xsl:value-of select="@border-bottom"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@border-left != ''">
																	<xsl:text>border-left:</xsl:text><xsl:value-of select="@border-left"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@border-top != ''">
																	<xsl:text>border-top:</xsl:text><xsl:value-of select="@border-top"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@border-right != ''">
																	<xsl:text>border-right:</xsl:text><xsl:value-of select="@border-right"/><xsl:text>;</xsl:text>
																</xsl:if>
																<xsl:if test="@background-image != ''">
																	<xsl:text>background-image:url(</xsl:text><xsl:value-of select="@background-image"/><xsl:text>);</xsl:text>
																</xsl:if>
															</xsl:variable>
															<xsl:attribute name="style"><xsl:value-of select="$varStyle"/></xsl:attribute>

															<div>
																<xsl:variable name="cellWidth">
																	<xsl:value-of select="substring-before(@width,'pt')"/>
																</xsl:variable>

																<xsl:variable name="varDivStyle">
																	<xsl:value-of select="'overflow:hidden;'"/>

																	<xsl:if test="@white-space != ''">
																		<xsl:text>white-space:</xsl:text><xsl:value-of select="@white-space"/><xsl:text>;</xsl:text>
																	</xsl:if>

																	<xsl:variable name="rowHeight">
																		<xsl:choose>
																			<xsl:when test="@height != ''">
																				<xsl:value-of select="substring-before(@height,'px')"/>
																			</xsl:when>
																			<xsl:otherwise>
																				<xsl:value-of select="substring-before(../../@height,'px')"/>
																			</xsl:otherwise>
																		</xsl:choose>
																	</xsl:variable>

																	<xsl:choose>
																		<xsl:when test="($rowHeight &lt; 4) or ($cellWidth &lt; 3)"><xsl:text>padding:0px;</xsl:text></xsl:when>
																		<xsl:otherwise><xsl:text>padding:2px;</xsl:text></xsl:otherwise>
																	</xsl:choose>
																	<xsl:text>height:</xsl:text>
																	<xsl:choose>
																		<xsl:when test="$rowHeight &lt; 4"><xsl:text>0px</xsl:text></xsl:when>
																		<xsl:otherwise>
																			<xsl:choose>
																				<xsl:when test="@border-top != ''">
																					<xsl:choose>
																						<xsl:when test="contains(@border-top,'1px') or contains(@border-top,'0.75pt')">
																							<xsl:value-of select="$rowHeight - 5"/><xsl:text>px</xsl:text>
																						</xsl:when>
																						<xsl:when test="contains(@border-top,'2px') or contains(@border-top,'1.5pt')">
																							<xsl:value-of select="$rowHeight - 6"/><xsl:text>px</xsl:text>
																						</xsl:when>
																						<xsl:otherwise>
																							<xsl:value-of select="$rowHeight - 4"/><xsl:text>px</xsl:text>
																						</xsl:otherwise>
																					</xsl:choose>
																				</xsl:when>
																				<xsl:otherwise>
																					<xsl:value-of select="$rowHeight - 4"/><xsl:text>px</xsl:text>
																				</xsl:otherwise>
																			</xsl:choose>
																		</xsl:otherwise>
																	</xsl:choose>
																	<xsl:text>;</xsl:text>
																</xsl:variable>
																<xsl:attribute name="style"><xsl:value-of select="$varDivStyle"/></xsl:attribute>

																<xsl:choose>
																	<xsl:when test="value/*">
																		<xsl:copy-of select="value/*"/>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:value-of select="value"/>
																	</xsl:otherwise>
																</xsl:choose>
															</div>
														</td>
													</xsl:for-each>
												</xsl:for-each>
											</tr>
										</xsl:for-each>
									</xsl:for-each>
								</xsl:for-each>
							</xsl:for-each>
						</tbody>
					</table>

					<xsl:for-each select="worksheet">
                        <xsl:for-each select="grid">
                            <xsl:for-each select="charts">
                                <xsl:for-each select="chart">
                                    <img style="position:absolute;left:{@left+7}pt;top:{@top+7}pt;width:{@width};height:{@height};">
                                        <xsl:attribute name="src">
                                            <xsl:value-of select="translate(string(@src), '&#x5c;', '/')" />
                                        </xsl:attribute>
                                    </img>
                                </xsl:for-each>
                            </xsl:for-each>
                        </xsl:for-each>
                    </xsl:for-each>

				</xsl:for-each>
			</body>
		</html>
	</xsl:template>
</xsl:stylesheet>
