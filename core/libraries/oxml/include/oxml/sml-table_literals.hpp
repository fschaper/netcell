/**
 *  \file
 *  Copyright (C) 2006-2009 Jedox AG
 *
 *  This program is free software; you can redistribute it and/or modify it
 *  under the terms of the GNU General Public License (Version 2) as published
 *  by the Free Software Foundation at http://www.gnu.org/copyleft/gpl.html.
 *
 *  This program is distributed in the hope that it will be useful, but WITHOUT
 *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 *  more details.
 *
 *  You should have received a copy of the GNU General Public License along with
 *  this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 *  Place, Suite 330, Boston, MA 02111-1307 USA
 *
 *  You may obtain a copy of the License at
 *
 *  <a href="http://www.jedox.com/license_palo_bi_suite.txt">
 *    http://www.jedox.com/license_palo_bi_suite.txt
 *  </a>
 *
 *  If you are developing and distributing open source applications under the
 *  GPL License, then you are free to use Worksheetserver under the GPL License.
 *  For OEMs, ISVs, and VARs who distribute Worksheetserver with their products,
 *  and do not license and distribute their source code under the GPL, Jedox provides
 *  a flexible OEM Commercial License.
 */


// This file has been auto-generated. Don't change it by hand!

#ifndef SML_TABLE_LITERALS_HPP
#define SML_TABLE_LITERALS_HPP

#include <xio/xercesc/types.hpp>

namespace spreadsheetml
{
	namespace xio
	{
		static const XMLCh sml_table_array_literal[] = { 0x61, 0x72, 0x72, 0x61, 0x79, 0x00 };
		static const XMLCh sml_table_autoFilter_literal[] = { 0x61, 0x75, 0x74, 0x6f, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x00 };
		static const XMLCh sml_table_calculatedColumnFormula_literal[] = { 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x00 };
		static const XMLCh sml_table_comment_literal[] = { 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_table_connectionId_literal[] = { 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x00 };
		static const XMLCh sml_table_count_literal[] = { 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_table_dataCellStyle_literal[] = { 0x64, 0x61, 0x74, 0x61, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x00 };
		static const XMLCh sml_table_dataDxfId_literal[] = { 0x64, 0x61, 0x74, 0x61, 0x44, 0x78, 0x66, 0x49, 0x64, 0x00 };
		static const XMLCh sml_table_denormalized_literal[] = { 0x64, 0x65, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x00 };
		static const XMLCh sml_table_displayName_literal[] = { 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_table_extLst_literal[] = { 0x65, 0x78, 0x74, 0x4c, 0x73, 0x74, 0x00 };
		static const XMLCh sml_table_headerRowBorderDxfId_literal[] = { 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x78, 0x66, 0x49, 0x64, 0x00 };
		static const XMLCh sml_table_headerRowCellStyle_literal[] = { 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x00 };
		static const XMLCh sml_table_headerRowCount_literal[] = { 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_table_headerRowDxfId_literal[] = { 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x6f, 0x77, 0x44, 0x78, 0x66, 0x49, 0x64, 0x00 };
		static const XMLCh sml_table_http_colon__slash__slash_schemas_dot_openxmlformats_dot_org_slash_spreadsheetml_slash_2006_slash_main_literal[] = { 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2e, 0x6f, 0x70, 0x65, 0x6e, 0x78, 0x6d, 0x6c, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x73, 0x68, 0x65, 0x65, 0x74, 0x6d, 0x6c, 0x2f, 0x32, 0x30, 0x30, 0x36, 0x2f, 0x6d, 0x61, 0x69, 0x6e, 0x00 };
		static const XMLCh sml_table_http_colon__slash__slash_www_dot_w3_dot_org_slash_2001_slash_XMLSchema_literal[] = { 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x77, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x32, 0x30, 0x30, 0x31, 0x2f, 0x58, 0x4d, 0x4c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x00 };
		static const XMLCh sml_table_id_literal[] = { 0x69, 0x64, 0x00 };
		static const XMLCh sml_table_insertRow_literal[] = { 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x00 };
		static const XMLCh sml_table_insertRowShift_literal[] = { 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x53, 0x68, 0x69, 0x66, 0x74, 0x00 };
		static const XMLCh sml_table_mapId_literal[] = { 0x6d, 0x61, 0x70, 0x49, 0x64, 0x00 };
		static const XMLCh sml_table_name_literal[] = { 0x6e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_table_published_literal[] = { 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x00 };
		static const XMLCh sml_table_queryTableFieldId_literal[] = { 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x64, 0x00 };
		static const XMLCh sml_table_ref_literal[] = { 0x72, 0x65, 0x66, 0x00 };
		static const XMLCh sml_table_showColumnStripes_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x73, 0x00 };
		static const XMLCh sml_table_showFirstColumn_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x00 };
		static const XMLCh sml_table_showLastColumn_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x00 };
		static const XMLCh sml_table_showRowStripes_literal[] = { 0x73, 0x68, 0x6f, 0x77, 0x52, 0x6f, 0x77, 0x53, 0x74, 0x72, 0x69, 0x70, 0x65, 0x73, 0x00 };
		static const XMLCh sml_table_sortState_literal[] = { 0x73, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x00 };
		static const XMLCh sml_table_table_literal[] = { 0x74, 0x61, 0x62, 0x6c, 0x65, 0x00 };
		static const XMLCh sml_table_tableBorderDxfId_literal[] = { 0x74, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x78, 0x66, 0x49, 0x64, 0x00 };
		static const XMLCh sml_table_tableColumn_literal[] = { 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x00 };
		static const XMLCh sml_table_tableColumns_literal[] = { 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x00 };
		static const XMLCh sml_table_tableStyleInfo_literal[] = { 0x74, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x00 };
		static const XMLCh sml_table_tableType_literal[] = { 0x74, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x00 };
		static const XMLCh sml_table_totalsRowBorderDxfId_literal[] = { 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x77, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x78, 0x66, 0x49, 0x64, 0x00 };
		static const XMLCh sml_table_totalsRowCellStyle_literal[] = { 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x77, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x00 };
		static const XMLCh sml_table_totalsRowCount_literal[] = { 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x00 };
		static const XMLCh sml_table_totalsRowDxfId_literal[] = { 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x77, 0x44, 0x78, 0x66, 0x49, 0x64, 0x00 };
		static const XMLCh sml_table_totalsRowFormula_literal[] = { 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x77, 0x46, 0x6f, 0x72, 0x6d, 0x75, 0x6c, 0x61, 0x00 };
		static const XMLCh sml_table_totalsRowFunction_literal[] = { 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x77, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x00 };
		static const XMLCh sml_table_totalsRowLabel_literal[] = { 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x77, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x00 };
		static const XMLCh sml_table_totalsRowShown_literal[] = { 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x73, 0x52, 0x6f, 0x77, 0x53, 0x68, 0x6f, 0x77, 0x6e, 0x00 };
		static const XMLCh sml_table_uniqueName_literal[] = { 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x00 };
		static const XMLCh sml_table_xmlColumnPr_literal[] = { 0x78, 0x6d, 0x6c, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x50, 0x72, 0x00 };
		static const XMLCh sml_table_xmlDataType_literal[] = { 0x78, 0x6d, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x00 };
		static const XMLCh sml_table_xmlns_literal[] = { 0x78, 0x6d, 0x6c, 0x6e, 0x73, 0x00 };
		static const XMLCh sml_table_xpath_literal[] = { 0x78, 0x70, 0x61, 0x74, 0x68, 0x00 };
		static const XMLCh sml_table_xsd_literal[] = { 0x78, 0x73, 0x64, 0x00 };
	}
}
#endif

